rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users: only user can write, any authenticated user can read
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    // Bookings: anyone can read, authenticated users can create, users can update their own bookings, admins can update/delete any
    match /bookings/{bookingId} {
      allow read, list: if true; // Anyone can read bookings
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        exists(/databases/$(database)/documents/admin/$(request.auth.uid))
      );
    }
    // Buses: anyone can read, only authenticated users can write
    match /buses/{busId} {
      allow read: if true;
      allow write: if request.auth != null;
      // Timings subcollection: anyone can read, only authenticated users can write
      match /timings/{timingId} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }
    // Admin collection: only authenticated users can read
    match /admin/{docId} {
      allow read: if request.auth != null;
    }
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 